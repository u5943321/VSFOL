
val _ = add_parse (int_of "Œ∑");

val cpnt_def = qdefine_fsym("cpnt",
[‚ÄòŒ∑:A -> Exp(2,B)‚Äô,‚Äòa:1->A‚Äô])
‚ÄòPt(Œ∑ o a) o Pa(Id(2),To1(2))‚Äô
|> gen_all

val irt_uex = proved_th $
e0
cheat
(form_goal
 ‚Äú‚àÄA B Œ∑:A->Exp(2,B) Œµ:A -> Exp(2,B).
  ?!a:A -> Exp(3,B). 
   (Ed(1f,B) o Œ∑ = Ed(0f,B) o Œµ &
    Ed(Œ±,B) o a = Œ∑ & Ed(Œ≤,B) o a = Œµ) |
   (~(Ed(1f,B) o Œ∑ = Ed(0f,B) o Œµ) &
    a = Ed(0f o To1(3),B) o Œ∑)‚Äù)

val irt_def0 = irt_uex |> spec_all
                       |> qsimple_uex_spec "irt" [‚ÄòŒ∑‚Äô,‚ÄòŒµ‚Äô] 

val irt_def = proved_th $
e0
cheat
(form_goal
 ‚Äú‚àÄA B Œ∑:A->Exp(2,B) Œµ:A -> Exp(2,B).
  Ed(1f,B) o Œ∑ = Ed(0f,B) o Œµ ‚áí
  (Ed(Œ±,B) o irt(Œ∑,Œµ) = Œ∑ & Ed(Œ≤,B) o irt(Œ∑,Œµ) = Œµ)  &
  (‚àÄa'. Ed(Œ±,B) o a' = Œ∑ & Ed(Œ≤,B) o a' = Œµ ‚áí
   a' = irt(Œ∑,Œµ))‚Äù)

(*cod Œ∑ = dom Œµ *)
val vo_def = 
qdefine_fsym("vo",[‚ÄòŒµ:A-> Exp(2,B)‚Äô,‚ÄòŒ∑:A->Exp(2,B)‚Äô])
‚ÄòEd(Œ≥, B) o irt(Œ∑,Œµ)‚Äô


val ID_def = 
qdefine_fsym("ID",[‚ÄòF:A->B‚Äô])
‚ÄòTp(F o p2(2,A))‚Äô

val Adj_def = qdefine_psym("Adj",
[‚ÄòL:X->A‚Äô,‚ÄòR:A->X‚Äô,‚ÄòŒ∑:X->Exp(2,X)‚Äô,‚ÄòŒµ:A->Exp(2,A)‚Äô])
‚Äòvo(Lw(Œµ,L),Rw(L,Œ∑))  = ID(L) ‚àß 
 vo(Rw(R,Œµ),Lw(Œ∑,R))  = ID(R)‚Äô
|> qgenl [‚ÄòA‚Äô,‚ÄòX‚Äô,‚ÄòL‚Äô,‚ÄòR‚Äô,‚ÄòŒ∑‚Äô,‚ÄòŒµ‚Äô]



val UFrom_def = 
qdefine_psym("UFrom",[‚ÄòF:D->C‚Äô,‚Äòx:1->C‚Äô,‚Äòy:1->D‚Äô,‚Äòf:2->C‚Äô])
‚Äò dom(f) = F o y ‚àß cod(f) = x ‚àß
 (‚àÄx':1->D f':2-> C. dom(f') = F o x' ‚àß cod(f') = x ‚áí
 ‚àÉ!fh:2->D. f' = f @ (F o fh))‚Äô 
|> qgenl [‚ÄòD‚Äô,‚ÄòC‚Äô,‚ÄòF‚Äô,‚Äòx‚Äô,‚Äòy‚Äô,‚Äòf‚Äô]



(*RT_cs2, BL_cs2 cs2_RT_cpsb*)

val cs2_arrows = prove_store("cs2_arrows",
e0
(strip_tac >> 
 qsspecl_then [‚Äòf‚Äô] strip_assume_tac to_P_has_comp >>
 qsspecl_then [‚Äòa‚Äô] strip_assume_tac CC2_1 >>
 qsspecl_then [‚Äòb‚Äô] strip_assume_tac CC2_1 >> fs[])
(form_goal
 ‚Äú‚àÄf:2-> 2 * 2. 
   f = Pa(ùüò,ùüò)| f = Pa(ùüò,ùüô) | f = Pa(ùüô,ùüò) | f = Pa(ùüô,ùüô) |
   f = Pa(ùüò,ùüö)| f = Pa(ùüö,ùüô) | f = Pa(ùüö,ùüò) | f = Pa(ùüô,ùüö) |
   f = Pa(ùüö,ùüö)‚Äù));


val Pa_eq_eq = prove_store("Pa_eq_eq",
e0
(rpt strip_tac >> dimp_tac >> strip_tac >> arw[] >>
 qby_tac ‚Äòp1(A,B) o Pa(f1, g1) = p1(A,B) o Pa(f2, g2) &
          p2(A,B) o Pa(f1, g1) = p2(A,B) o Pa(f2, g2)‚Äô
 >-- arw[] >>
 fs[p12_of_Pa])
(form_goal
 ‚Äú!A X f1:X->A f2:X->A B g1:X->B g2:X->B. 
  Pa(f1,g1) = Pa(f2,g2) <=> f1 = f2 & g1 = g2‚Äù));

val dom_cod_Pa02 = prove_store("dom_cod_Pa02",
e0
(rw[dom_def,cod_def,Pa_distr] >>
 rw[GSYM dom_def,GSYM cod_def] >>
 rw[Pa_eq_eq,dom_cod_zot])
(form_goal ‚Äúdom(Pa(ùüò,ùüö)) = Pa(0f,0f) & 
            cod(Pa(ùüò,ùüö)) = Pa(0f,1f) ‚Äù));


val dom_cod_Pa12 = prove_store("dom_cod_Pa12",
e0
(rw[dom_def,cod_def,Pa_distr] >>
 rw[GSYM dom_def,GSYM cod_def] >>
 rw[Pa_eq_eq,dom_cod_zot])
(form_goal ‚Äúdom(Pa(ùüô,ùüö)) = Pa(1f,0f) & 
            cod(Pa(ùüô,ùüö)) = Pa(1f,1f) ‚Äù));

val Pa00_id = prove_store("Pa00_id",
e0
(rw[id_def,Pa_distr,Pa_eq_eq,zero_def])
(form_goal ‚ÄúPa(ùüò,ùüò) = id(Pa(0f,0f))‚Äù));


val Pa10_id = prove_store("Pa10_id",
e0
(rw[id_def,Pa_distr,Pa_eq_eq,zero_def,one_def])
(form_goal ‚ÄúPa(ùüô,ùüò) = id(Pa(1f,0f))‚Äù));


val Pa01_id = prove_store("Pa01_id",
e0
(rw[id_def,Pa_distr,Pa_eq_eq,zero_def,one_def])
(form_goal ‚ÄúPa(ùüò,ùüô) = id(Pa(0f,1f))‚Äù));


val Pa11_id = prove_store("Pa11_id",
e0
(rw[id_def,Pa_distr,Pa_eq_eq,one_def])
(form_goal ‚ÄúPa(ùüô,ùüô) = id(Pa(1f,1f))‚Äù));

val cs_ext = prove_store("cs_ext",
e0
(rpt strip_tac >> 
 qby_tac
 ‚Äòs1 o Pa(ùüö, ùüö) = s2 o Pa(ùüö, ùüö)‚Äô
 >-- (rw[GSYM RT_cs2] >>
     assume_tac cs2_RT_cpsb >> drule fun_pres_oa >>
     fs[csL_def,csR_def,csT_def,csB_def]) >>
 qby_tac
 ‚Äòs1 o Pa(ùüò, ùüò) = s2 o Pa(ùüò, ùüò)‚Äô 
 >-- (fs[csL_def] >> 
     rw[Pa00_id,GSYM dom_cod_Pa02,id_def,dom_def] >>
     arw[GSYM o_assoc]) >>
 qby_tac
 ‚Äòs1 o Pa(ùüô, ùüò) = s2 o Pa(ùüô, ùüò)‚Äô 
 >-- (fs[csR_def] >> 
     rw[Pa10_id,GSYM dom_cod_Pa12,id_def,dom_def] >>
     arw[GSYM o_assoc]) >>
 qby_tac
 ‚Äòs1 o Pa(ùüò,ùüô) = s2 o Pa(ùüò,ùüô)‚Äô 
 >-- (fs[csL_def] >> 
     rw[Pa01_id,GSYM dom_cod_Pa02,id_def,cod_def] >>
     arw[GSYM o_assoc]) >>
 qby_tac
 ‚Äòs1 o Pa(ùüô,ùüô) = s2 o Pa(ùüô,ùüô)‚Äô 
 >-- (fs[csR_def] >> 
     rw[Pa11_id,GSYM dom_cod_Pa12,id_def,cod_def] >>
     arw[GSYM o_assoc]) >>
 fs[csL_def,csR_def,csT_def,csB_def] >>
 irule $ iffLR fun_ext >>
 strip_tac >>
 qsspecl_then [‚Äòa‚Äô] strip_assume_tac cs2_arrows >>
 fs[])
(form_goal
 ‚Äú‚àÄs1 s2: 2 * 2 ->A.
  csL(s1) = csL(s2) &
  csR(s1) = csR(s2) &
  csT(s1) = csT(s2) &
  csB(s1) = csB(s2) ‚áí s1 = s2‚Äù));



val Nt_ext = prove_store("Nt_ext",
e0
(rpt strip_tac >>
 irule $ iffLR fun_ext >>
 strip_tac >>
 irule $ iffLR Pt_eq_eq >> 
 irule cs_ext >> 
 fs[Nt_def] >> strip_tac (* 2 *)
 >-- (first_x_assum (qspecl_then [‚Äòdom(a)‚Äô] assume_tac) >>
     rw[csT_dom] >> fs[dom_def,o_assoc]) >>
 first_x_assum (qspecl_then [‚Äòcod(a)‚Äô] assume_tac) >>
 rw[csB_cod] >> fs[cod_def,o_assoc])
(form_goal
 ‚Äú‚àÄF1:A->B F2:A->B Œ∑1:A -> Exp(2,B) Œ∑2.
  Nt(Œ∑1,F1,F2) & Nt(Œ∑2,F1,F2) &
  (‚àÄa:1->A. Œ∑1 o a  = Œ∑2 o a) ‚áí Œ∑1 = Œ∑2‚Äù));

val tP_def = qdefine_fsym("tP",[‚Äòf:A * X->B‚Äô])
‚ÄòTp(f o Swap(X,A))‚Äô

val ID_def = 
qdefine_fsym("ID",[‚ÄòF:A->B‚Äô])
‚ÄòTp(Pt(id(Tp1(F))) o Swap(2,A))‚Äô


val ID_ap = prove_store("ID_ap",
e0
(rw[ID_def]>> rw[GSYM Tp1_def] >>
 rpt strip_tac >>
 irule Ev_eq_eq >>
 rw[Ev_of_Tp_el,o_assoc,p12_of_Pa,one_to_one_Id,IdR,
    To1_def,id_def,Pt_def,Swap_property,p12_of_Pa])
(form_goal
 ‚Äú‚àÄX A L:X->A x:1->X. 
 Tp1(id(L o x)) = ID(L) o x‚Äù));



val ID_ap_ar = prove_store("ID_ap_ar",
e0
(rw[ID_def]>> rw[GSYM Tp1_def] >>
 rpt strip_tac >>
 irule Ev_eq_eq >>
 rw[Ev_of_Tp_el,o_assoc,p12_of_Pa,one_to_one_Id,IdR,
    To1_def,id_def,Pt_def,Swap_property,p12_of_Pa] >>
 qby_tac
 ‚ÄòL o f o p1(2, 2) o Swap(2, 2) o Pa(p1(2, 2), p2(2, 2)) = L o f o (p1(2, 2) o Swap(2, 2)) o Pa(p1(2, 2), p2(2, 2))‚Äô
 >-- rw[o_assoc] >>
 arw[Swap_property,p12_of_Pa])
(form_goal
 ‚Äú‚àÄX A L:X->A f:2->X. 
 Tp(Pt(id(Tp1(L o f))) o Swap(2,2)) = ID(L) o f‚Äù));


val Ev_of_el = prove_store("Ev_of_el",
e0
(rpt strip_tac >>
 qby_tac 
 ‚Äòf = Tp1(Tp0(f))‚Äô >-- rw[Tp1_Tp0_inv] >> once_arw[] >>
 rw[GSYM Tp1_def,Ev_of_Tp_el'] >> rw[Tp1_def,Tp1_Tp0_inv] >>
 rw[o_assoc,p12_of_Pa,idR])
(form_goal
 ‚Äú!A B f:1->Exp(A,B) a:1->A.
  Ev(A,B) o Pa(a,f) = Tp0(f) o a‚Äù));


val Ev_of_el_gen = prove_store("Ev_of_el_gen",
e0
(rpt strip_tac >>
 rw[Pt_def] >> rw[o_assoc,Pa_distr,p12_of_Pa,IdR])
(form_goal
 ‚Äú!A B f:X->Exp(A,B) a:X->A.
  Ev(A,B) o Pa(a,f) = Pt(f) o Pa(a,Id(X))‚Äù));

(*,csR_csB'*)
val ID_Nt = prove_store("ID_Nt",
e0
(rw[Nt_def] >> rw[GSYM ID_ap_ar] >>
 rw[Pt_Tp] >> 
 rw[id_def,o_assoc,csL_def,csB_def,csR_def,To1_def] >>
 rpt strip_tac (* 2 *)
 >-- (rw[Pt_def,Tp1_def,Ev_of_Tp_el,o_assoc,
        GSYM Swap_def,p12_of_Pa,Pa_distr,To1_def] >>
     once_rw[Ev_of_el_gen] >> 
     rw[Pt_def] >> rw[two_def] >> rw[GSYM Tp1_def] >>
     qby_tac
     ‚Äò(Tp(((L o f) o p1(2, 1))) o To1(2)) o p2(2, 2) = 
      Tp(((L o f) o p1(2, 1))) o (To1(2) o p2(2, 2))‚Äô
     >-- rw[o_assoc] >> arw[] >>
     rw[Ev_of_Tp_el] >>
     rw[o_assoc,p12_of_Pa,Pa_distr,IdR]) >>
 rw[Pt_def,Tp1_def,Ev_of_Tp_el,o_assoc,
        GSYM Swap_def,p12_of_Pa,Pa_distr,To1_def] >>
 once_rw[Ev_of_el_gen] >> 
 rw[Pt_def] >> rw[two_def] >> rw[GSYM Tp1_def] >>
     qby_tac
     ‚Äò(Tp(((L o f) o p1(2, 1))) o To1(2)) o p2(2, 2) = 
      Tp(((L o f) o p1(2, 1))) o (To1(2) o p2(2, 2))‚Äô
     >-- rw[o_assoc] >> arw[] >>
     rw[Ev_of_Tp_el] >>
     rw[o_assoc,p12_of_Pa,Pa_distr,IdR])
(form_goal
 ‚Äú‚àÄX A L:X->A. Nt(ID(L), L, L)‚Äù));

val Adj_alt = prove_store("Adj_alt",
e0
(rpt strip_tac >> rw[Adj_def] >>
 strip_tac (* 2 *)
 >-- irule Nt_ext >> arw[ID_ap] >>
     qexistsl_tac [‚ÄòL‚Äô,‚ÄòL‚Äô] >> rw[ID_Nt] >>
     
     
 )
(form_goal 
 ‚Äú‚àÄL:X->A R:A->X Œ∑: X-> Exp(2,X) Œµ:A->Exp(2,A).
  Nt(Œµ, L o R,Id(A)) &
  Nt(Œ∑,Id(X),R o L) &
  (‚àÄx:1->X. 
  vo(Lw(Œµ,L),Rw(L,Œ∑)) o x = Tp1(id(L o x))) & 
  (‚àÄa:1->A.
  vo(Rw(R,Œµ),Lw(Œ∑,R)) o a = Tp1(id(R o a))) ‚áí
  Adj(L,R,Œ∑,Œµ)‚Äù

vo(Lw(Œµ,L),Rw(L,Œ∑))  = ID(L) ‚àß 
  vo(Rw(R,Œµ),Lw(Œ∑,R))  = ID(R)‚Äù));

val Thm13_ex = prove_store("Thm13_ex",
e0
(rpt strip_tac >>
 qby_tac
 ‚Äò!G:A->X Œ∑:X->Exp(2,X) Œµ:A->Exp(2,A). 
  
   ‚áí Adj(F,G,Œ∑,Œµ) ‚àß
   ‚àÄa:1->A. cod(cpnt(Œµ,a)) = a ‚àß U(G o a,cpnt(Œµ,a))‚Äô)
(form_goal
 ‚Äú‚àÄX A F:X->A. 
  (‚àÄx:1->X f:2->A. U(x,f) ‚áí UFrom(F,cod(f),x,f)) ‚àß
  (‚àÄa:1->A. ‚àÉ!x:1->X f:2->A. cod(f) = a ‚àß U(x,f)) ‚áí
  ‚àÉG:A->X Œ∑ Œµ:A->Exp(2,A). Adj(F,G,Œ∑,Œµ) ‚àß
   ‚àÄa:1->A. cod(cpnt(Œµ,a)) = a ‚àß U(G o a,cpnt(Œµ,a))‚Äù));

